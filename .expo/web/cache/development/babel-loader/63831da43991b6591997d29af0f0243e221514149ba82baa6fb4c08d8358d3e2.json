{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AuthContext } from \"../services/AuthContext\";\nimport { getMenuData } from \"../services/MenuService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState('a@e.com'),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState('123'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showpassword = _useState6[0],\n    setShowpassword = _useState6[1];\n  var _React$useContext = React.useContext(AuthContext),\n    signIn = _React$useContext.signIn;\n  function attemptLogin() {\n    return _attemptLogin.apply(this, arguments);\n  }\n  function _attemptLogin() {\n    _attemptLogin = _asyncToGenerator(function* () {\n      try {\n        yield signIn({\n          username: username,\n          password: password\n        });\n      } catch (error) {\n        if (Platform.OS !== \"web\") {\n          Alert.alert(error.toString());\n        } else {\n          alert(error);\n        }\n      }\n    });\n    return _attemptLogin.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.head1,\n      children: \"Bean Scene Ordering System\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Username\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true\n      }), _jsx(Button, {\n        title: \"Login\",\n        onPress: function onPress(e) {\n          return attemptLogin();\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  head1: {\n    fontSize: titles.title1,\n    color: colors.text1,\n    textAlign: 'center',\n    marginVertical: 10\n  },\n  inputout: {\n    flexDirection: 'row',\n    width: '80%',\n    marginVertical: 10,\n    backgroundColor: colors.col1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    alignSelf: 'center',\n    boxShadow: '2px 2px 10px #888888'\n  },\n  input: {\n    fontSize: 18,\n    marginLeft: 10,\n    width: '80%',\n    outlineStyle: \"none\"\n  }\n});","map":{"version":3,"names":["React","useState","Button","StyleSheet","Text","View","TextInput","Alert","Platform","NavigationContainer","createNativeStackNavigator","useNavigation","AuthContext","getMenuData","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","showpassword","setShowpassword","_React$useContext","useContext","signIn","attemptLogin","_attemptLogin","apply","arguments","_asyncToGenerator","error","OS","alert","toString","style","styles","container","children","head1","formContainer","label","input","placeholder","onChangeText","text","secureTextEntry","title","onPress","e","create","flex","width","alignItems","justifyContent","fontSize","titles","title1","color","colors","text1","textAlign","marginVertical","inputout","flexDirection","backgroundColor","col1","borderRadius","paddingHorizontal","paddingVertical","alignSelf","boxShadow","marginLeft","outlineStyle"],"sources":["D:/Users/jianna.huang/Desktop/6.6/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, StyleSheet, Text, View, TextInput, Alert, Platform } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { AuthContext } from '../services/AuthContext';\r\nimport { getMenuData } from '../services/MenuService';\r\n\r\nexport default function LoginScreen() {\r\n    const [username, setUsername] = useState('a@e.com');\r\n    const [password, setPassword] = useState('123');\r\n    const [showpassword, setShowpassword] = useState(false);\r\n\r\n\r\n    const { signIn } = React.useContext(AuthContext);\r\n\r\n\r\n\r\n    async function attemptLogin() {\r\n      try {\r\n        await signIn({ username, password });\r\n      } catch (error) {\r\n        if (Platform.OS !== \"web\") {\r\n          Alert.alert(error.toString());\r\n        } else {\r\n          alert(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n         <View style={styles.container}>\r\n         <Text style={styles.head1}>Bean Scene Ordering System</Text>\r\n         <View style={styles.formContainer}>\r\n         <Text style={styles.label}>Login</Text>\r\n         <TextInput\r\n            style={styles.input}\r\n              placeholder=\"Username\"\r\n               onChangeText={(text) => setUsername(text)}\r\n             />\r\n             <TextInput\r\n               style={styles.input}\r\n               placeholder=\"Password\"\r\n               onChangeText={(text) => setPassword(text)}\r\n               secureTextEntry\r\n             />\r\n             <Button title=\"Login\" onPress={(e) => attemptLogin()} />\r\n           </View>\r\n          \r\n         </View>\r\n    )}\r\n\r\n\r\n      \r\n      \r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    // container: {\r\n    //   flex: 1,\r\n    //   backgroundColor: '#fff',\r\n    //   alignItems: 'center',\r\n    //   justifyContent: 'center',\r\n    //   padding: 20,\r\n    // },\r\n    // title: {\r\n    //   fontSize: 24,\r\n    //   fontWeight: 'bold',\r\n    //   marginBottom: 20,\r\n    // },\r\n    // formContainer: {\r\n    //   width: '100%',\r\n    //   marginBottom: 20,\r\n    // },\r\n    // label: {\r\n    //   fontSize: 18,\r\n    //   marginBottom: 10,\r\n    // },\r\n    // input: {\r\n    //   height: 40,\r\n    //   borderColor: 'gray',\r\n    //   borderWidth: 1,\r\n    //   marginBottom: 10,\r\n    //   paddingHorizontal: 10,\r\n    // },\r\n\r\n    container:{\r\n      flex: 1,\r\n      width: '100%',\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n\r\n  },\r\n  head1:{\r\n      fontSize: titles.title1,\r\n      color:colors.text1,\r\n      textAlign: 'center',\r\n      marginVertical:10,\r\n  },\r\n  inputout:{\r\n      flexDirection:'row',\r\n      width:'80%',\r\n      marginVertical:10,\r\n      backgroundColor: colors.col1,\r\n      borderRadius: 10,\r\n      paddingHorizontal: 10,\r\n      paddingVertical:10,\r\n      alignSelf:'center',\r\n      //elevation: 20, //only android\r\n      boxShadow: '2px 2px 10px #888888', //web use\r\n  },\r\n  input: {\r\n      fontSize: 18,\r\n      marginLeft: 10,\r\n      width: '80%',\r\n      outlineStyle: \"none\",\r\n  }\r\n  });\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}