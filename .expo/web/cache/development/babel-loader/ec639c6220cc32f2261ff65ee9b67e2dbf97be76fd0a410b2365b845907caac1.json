{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { startNewOrder } from \"../services/OrderService\";\nimport { getMenuData } from \"../services/MenuService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MenuScreen(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var tableId = route.params.tableId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    products = _useState2[0],\n    setProducts = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedItems = _useState4[0],\n    setSelectedItems = _useState4[1];\n  var addItemToOrder = function addItemToOrder(item) {\n    var itemExist = setSelectedItems(function (prevItems) {\n      return [].concat(_toConsumableArray(prevItems), [item]);\n    });\n  };\n  function save() {\n    return _save.apply(this, arguments);\n  }\n  function _save() {\n    _save = _asyncToGenerator(function* () {\n      var order = {\n        TableId: tableId,\n        Items: selectedItems\n      };\n      try {\n        var orderData = yield startNewOrder(order);\n        navigation.navigate('OrderDetail', {\n          orderData: orderData\n        });\n        var newOrderData = data.concat(orderData);\n        setData(newOrderData);\n        Alert.alert('The order was saved successfully!');\n      } catch (error) {}\n    });\n    return _save.apply(this, arguments);\n  }\n  useEffect(function () {\n    getMenuData().then(setProducts).catch(function (e) {\n      return Alert.alert(e);\n    });\n  }, []);\n  var renderProduct = function renderProduct(p) {\n    var item = p.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.menuItem,\n      onPress: function onPress() {\n        return addItemToOrder(item);\n      },\n      children: _jsx(Text, {\n        style: styles.menuItemText,\n        children: item.itemName\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"Table ID: \", tableId]\n    }), _jsx(FlatList, {\n      data: products,\n      renderItem: renderProduct,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(Button, {\n      title: \"Place order\",\n      onPress: save\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","FlatList","Text","Alert","Button","TouchableOpacity","useNavigation","useRoute","startNewOrder","getMenuData","jsx","_jsx","jsxs","_jsxs","MenuScreen","_ref","route","navigation","tableId","params","_useState","_useState2","_slicedToArray","products","setProducts","_useState3","_useState4","selectedItems","setSelectedItems","addItemToOrder","item","itemExist","prevItems","concat","_toConsumableArray","save","_save","apply","arguments","_asyncToGenerator","order","TableId","Items","orderData","navigate","newOrderData","data","setData","alert","error","then","catch","e","renderProduct","p","style","styles","menuItem","onPress","children","menuItemText","itemName","container","renderItem","keyExtractor","id","title","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["D:/Users/jianna.huang/Desktop/6.6/screens/MenuScreen.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { View, StyleSheet, FlatList, Text, Alert, Button,TouchableOpacity} from 'react-native';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { startNewOrder } from '../services/OrderService';\r\nimport { getMenuData } from '../services/MenuService';\r\n\r\nexport default function MenuScreen({route}) {\r\n    //navigation\r\n    const navigation = useNavigation();\r\n   \r\n\r\n    const { tableId} = route.params;\r\n   \r\n    //state\r\n    const [products, setProducts] = useState([])\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n     const addItemToOrder = (item) => {\r\n        // add item if it does not already exist\r\n        let itemExist =\r\n        // otherwise, increase qty if it does\r\n\r\n\r\n        setSelectedItems((prevItems) => [...prevItems, item]);\r\n      };\r\n      \r\n    async function save() {\r\n      \r\n        const order = {\r\n\r\n            TableId:tableId, \r\n            Items:selectedItems,\r\n        \r\n        }\r\n\r\n        try {\r\n            const orderData = await startNewOrder(order);\r\n            navigation.navigate('OrderDetail',{orderData});\r\n\r\n\r\n            // update state for order data\r\n            const newOrderData = data.concat(orderData);\r\n            setData(newOrderData);\r\n\r\n           \r\n           Alert.alert('The order was saved successfully!');\r\n        } catch (error) {\r\n            // const validationErrors = error.validationErrors;\r\n            // const errorMessage = validationErrors.join('\\n');\r\n            //Alert.alert(errorMessage);\r\n        }\r\n    }\r\n\r\n  useEffect(() => { \r\n    getMenuData().then(setProducts).catch(e=> Alert.alert(e));   \r\n  },[]);\r\n\r\n    const renderProduct = p => {\r\n      let item = p.item; \r\n\r\n      return  <TouchableOpacity style={styles.menuItem}  onPress={() => addItemToOrder(item)}>\r\n                <Text style={styles.menuItemText}>{item.itemName}</Text>\r\n\r\n              </TouchableOpacity>\r\n\r\n    }\r\n    \r\n    return  <View style={styles.container}>\r\n              <Text>Table ID: {tableId}</Text>\r\n              <FlatList data={products} renderItem={renderProduct} keyExtractor={(item) => item.id} />\r\n             \r\n              <Button title='Place order' onPress={save}\r\n               \r\n              \r\n               />\r\n            </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'stretch',\r\n        justifyContent: 'center',\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}