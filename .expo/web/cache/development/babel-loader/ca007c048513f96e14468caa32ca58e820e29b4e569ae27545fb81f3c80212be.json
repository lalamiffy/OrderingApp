{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AuthContext } from \"./services/AuthContext\";\nimport { getToken } from \"./services/TokenStorage\";\nimport * as LoginApiService from \"./services/LoginApiService\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport OrderScreen from \"./screens/HomeScreen\";\nimport MenuScreen from \"./screens/MenuScreen\";\nimport OrderDetail from \"./screens/OrderDetail\";\nimport OrderList from \"./screens/OrderList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  React.useEffect(function () {\n    var bootstrapAsync = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var userToken;\n        try {\n          userToken = yield getToken();\n        } catch (e) {}\n        setToken(userToken);\n      });\n      return function bootstrapAsync() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    bootstrapAsync();\n  }, []);\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function () {\n        var _signIn = _asyncToGenerator(function* (data) {\n          var username = data.username,\n            password = data.password;\n          var result = yield LoginApiService.login(username, password);\n          if (result.authenticated) {\n            setToken(result.token);\n            console.log(result);\n          }\n        });\n        function signIn(_x) {\n          return _signIn.apply(this, arguments);\n        }\n        return signIn;\n      }(),\n      signOut: function () {\n        var _signOut = _asyncToGenerator(function* () {\n          yield LoginApiService.signOut();\n          setToken(null);\n        });\n        function signOut() {\n          return _signOut.apply(this, arguments);\n        }\n        return signOut;\n      }(),\n      signUp: function () {\n        var _signUp = _asyncToGenerator(function* (data) {});\n        function signUp(_x2) {\n          return _signUp.apply(this, arguments);\n        }\n        return signUp;\n      }()\n    };\n  }, []);\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        children: token === null ? _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Order\",\n            component: OrderScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Menu\",\n            component: MenuScreen\n          }), _jsx(Stack.Screen, {\n            name: \"OrderList\",\n            component: OrderList\n          }), _jsx(Stack.Screen, {\n            name: \"OrderDetail\",\n            component: OrderDetail\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","Button","StyleSheet","Text","View","TextInput","createNativeStackNavigator","NavigationContainer","AuthContext","getToken","LoginApiService","LoginScreen","OrderScreen","MenuScreen","OrderDetail","OrderList","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","token","setToken","useEffect","bootstrapAsync","_ref","_asyncToGenerator","userToken","e","apply","arguments","authContext","useMemo","signIn","_signIn","data","username","password","result","login","authenticated","console","log","_x","signOut","_signOut","signUp","_signUp","_x2","Provider","value","children","Navigator","Screen","name","component","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["D:/Users/jianna.huang/Desktop/6.6/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { Button, StyleSheet, Text, View, TextInput } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { AuthContext } from './services/AuthContext';\r\nimport { getToken } from './services/TokenStorage';\r\nimport * as LoginApiService from './services/LoginApiService';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport OrderScreen from './screens/HomeScreen';\r\nimport MenuScreen from './screens/MenuScreen';\r\nimport OrderDetail from './screens/OrderDetail';\r\nimport OrderList from './screens/OrderList';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  const [token, setToken] = useState(null)\r\n\r\n  React.useEffect(() => {\r\n    // Fetch the token from storage then navigate to our appropriate place\r\n    const bootstrapAsync = async () => {\r\n      let userToken;\r\n\r\n      try {\r\n        userToken = await getToken();\r\n      } catch (e) {\r\n        // Restoring token failed\r\n      }\r\n\r\n      // After restoring token, we may need to validate it in production apps\r\n\r\n      // This will switch to the App screen or Auth screen and this loading\r\n      // screen will be unmounted and thrown away.\r\n      setToken(userToken);\r\n    };\r\n\r\n    bootstrapAsync();\r\n  }, []);\r\n\r\n  const authContext = React.useMemo(\r\n    () => ({\r\n      signIn: async (data) => {\r\n        const { username, password } = data;\r\n\r\n        //console.log(data);\r\n        const result = await LoginApiService.login(username, password);\r\n        if (result.authenticated) {\r\n          setToken(result.token);\r\n          console.log(result);\r\n\r\n        }\r\n      },\r\n      signOut: async () => {\r\n        await LoginApiService.signOut();\r\n        setToken(null);\r\n      },\r\n      signUp: async (data) => {\r\n        // In a production app, we need to send user data to server and get a token\r\n        // We will also need to handle errors if sign up failed\r\n        // After getting token, we need to persist the token using `SecureStore`\r\n        // In the example, we'll use a dummy token\r\n\r\n        // dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          {/* <Stack.Screen name=\"Login\" component={DebugLoginScreen} /> */}\r\n          {token === null ? (\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          ) : (\r\n            <>\r\n              <Stack.Screen name=\"Order\" component={OrderScreen} />\r\n              <Stack.Screen name=\"Menu\" component={MenuScreen} />\r\n              <Stack.Screen name=\"OrderList\" component={OrderList} />\r\n              <Stack.Screen name=\"OrderDetail\" component={OrderDetail} />\r\n            </>\r\n          )}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}